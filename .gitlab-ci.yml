stages:
  - build
  - docker
  - test
  - deploy

cache:
  key: "$CI_BUILD_REF_NAME"
  group: sharedcache
  paths:
  - vendor/
  - node_modules/
  - resources/assets/vendor

composer_npm:
  stage: build
  script:
    - mv env.ci .env
    - composer install --no-dev --prefer-dist
    - npm install
    - bower install
    - gulp --production
    - php artisan dms:lang-publish
    - mv .env env.ci
    - rm -f .bowerrc
    - rm -f bower.json
    - rm -f gulpfile.js
    - rm -f composer.json
    - rm -f composer.lock
    - rm -f testing.env
    - rm -f phpunit.xml
    - rm -f package.json
    - sed -i "s/BUILDCODE/${CI_BUILD_REF}/g" ./config/dms.php
    - tar --transform 's,^.,dms,' -cz . --exclude=.git --exclude=.gitignore --exclude=.gitattributes --exclude=.gitlab-ci.yml --exclude=tests --exclude=node_modules --exclude=resources/assets/js --exclude=resources/assets/less --exclude=resources/assets/sass --exclude=resources/assets/vendor > /var/www/temp/builds/klink-dms-$CI_BUILD_REF_NAME.tar.gz
  only:
    - master
    - project-edition
    - project-edition-development
  tags:
    - php
    - nodejs
    - shell
    
docker_image_pe:
  stage: docker
  script: 
    - cp /var/www/temp/builds/klink-dms-$CI_BUILD_REF_NAME.tar.gz /opt/klink-docker/dms/downloads/dms.tar.gz
    - cd /opt/klink-docker
    - docker-compose -f klink-services.yml build dmsproject
  only:
    - project-edition
  tags:
    - shell
    
docker_image_se:
  stage: docker
  script: 
    - cd /opt/klink-docker
    - docker-compose -f klink-services.yml build dms
  only:
    - master
  tags:
    - shell

test_deploy:
  stage: deploy
  script: 
    - docker-compose -f /opt/dms_klink_asia/klink-docker/docker-compose-kbox.yml up -d frontend
  only:
    - project-edition
  tags:
    - shell